name: Build and Test

on: 
  push:
    branches:
      - main
  pull_request:
    types: [opened, reopened, synchronize]
  schedule:
    - cron: 0 12 * * MON

env:
  SCRIPTS_DIR: ci_scripts

jobs:  
  swift-datastore:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build and Test
      run: |
        make -B swift_datastore
    - name: Validate codecov.yml
      run: |
        bash ci_scripts/codecov_validation.sh
    - name: Upload coverage to Codecov.io
      continue-on-error: false
      uses: codecov/codecov-action@v1.2.1
      env: 
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    - name: Danger
      if: github.event_name == 'pull_request'
      run: |
        bash ci_scripts/run_danger.sh
      env:
        DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-app:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build and Test
      run: |
        make -B test_app

  cocoa-pods-test-app:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: Pod Install
      run: |
        pod install --project-directory='TestApps/CocoaPodsApp'
    - name: Build
      run: |
        make -B cocoa_pods_test_app

  spm-test-app:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build
      run: |
        make -B spm_test_app

  sonarcloud-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
